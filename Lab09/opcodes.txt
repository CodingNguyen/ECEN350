38: MOVZ x11, 0x1234, LSL 48 // (x11 = 0x1234 * 2^48)
3c: ADD X9, x11, X9 // add result of MOVZ in x11 to x9

40: MOVZ x11, 0x5678, LSL 32 // (x11 = 0x5678 * 2^32)
44: ADD X9, x11, X9 // add result of MOVZ in x11 to x9

48: MOVZ x11, 0x9abc, LSL 16 // (x11 = 0x9abc * 2^16)
4c: ADD X9, x11, X9 // add result of MOVZ in x11 to x9

50: MOVZ x11, 0xdef0, LSL 0 // (x11 = 0xdef0 * 2^0)
54: ADD X9, x11, X9 // add result of MOVZ in x11 to x9
			
58: STUR X9, [XZR, 0x28] // store constant in memory
5c: LDUR X10, [XZR, 0x28] // Load constant into x10
ADDI
1001000100 000000000000 11111 01001

MOVZ
11010010111000100100011010001011
11010010110010101100111100001011
11010010101100110101011110001011
11010010100110111101111000001011

ADD
10001011000 01001 000000 01011 01001

STUR
11111000000 000011100 00 11111 01001

LDUR
11111000010 000011100 00 11111 01010