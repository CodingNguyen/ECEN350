$date
	Tue Oct 27 16:11:32 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module SignExtenderTest_v $end
$var wire 64 ! BusImm [63:0] $end
$var reg 2 " Ctrl [1:0] $end
$var reg 26 # Instr [25:0] $end
$var reg 8 $ passed [7:0] $end
$scope module dut $end
$var wire 64 % BusImm [63:0] $end
$var wire 2 & Ctrl [1:0] $end
$var wire 26 ' Instr [25:0] $end
$var reg 64 ( result [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 ) numTests [7:0] $end
$var reg 8 * passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 64 + actualOut [63:0] $end
$var reg 64 , expectedOut [63:0] $end
$var reg 8 - passed [7:0] $end
$var reg 121 . testType [120:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
bx -
bx ,
bx +
bx *
bx )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#90000
b11111000000 !
b11111000000 %
b11111000000 (
b111110000000000000000 #
b111110000000000000000 '
#100000
b1 $
b1 -
b1001001001011010111010001111001011100000110010100100000001100000010000001110100011001010111001101110100 .
b11111000000 ,
b11111000000 +
#190000
b111111000000 !
b111111000000 %
b111111000000 (
b1111110000000000000000 #
b1111110000000000000000 '
#200000
b10 $
b10 -
b1001001001011010111010001111001011100000110010100100000001100010010000001110100011001010111001101110100 .
b111111000000 ,
b111111000000 +
#290000
b11110000 !
b11110000 %
b11110000 (
b1 "
b1 &
b11110000000000000000 #
b11110000000000000000 '
#300000
b11 $
b11 -
b1000100001011010111010001111001011100000110010100100000001100000010000001110100011001010111001101110100 .
b11110000 ,
b11110000 +
#390000
b1111111111111111111111111111111111111111111111111111111111100000 !
b1111111111111111111111111111111111111111111111111111111111100000 %
b1111111111111111111111111111111111111111111111111111111111100000 (
b111100000000000000000 #
b111100000000000000000 '
#400000
b100 $
b100 -
b1000100001011010111010001111001011100000110010100100000001100010010000001110100011001010111001101110100 .
b1111111111111111111111111111111111111111111111111111111111100000 ,
b1111111111111111111111111111111111111111111111111111111111100000 +
#490000
b100011111000000000000000000 !
b100011111000000000000000000 %
b100011111000000000000000000 (
b10 "
b10 &
b1000111110000000000000000 #
b1000111110000000000000000 '
#500000
b101 $
b101 -
b1000010001011010111010001111001011100000110010100100000001100000010000001110100011001010111001101110100 .
b100011111000000000000000000 ,
b100011111000000000000000000 +
#590000
b1111111111111111111111111111111111111000001111000000000000000000 !
b1111111111111111111111111111111111111000001111000000000000000000 %
b1111111111111111111111111111111111111000001111000000000000000000 (
b10000011110000000000000000 #
b10000011110000000000000000 '
#600000
b110 $
b110 -
b1000010001011010111010001111001011100000110010100100000001100010010000001110100011001010111001101110100 .
b1111111111111111111111111111111111111000001111000000000000000000 ,
b1111111111111111111111111111111111111000001111000000000000000000 +
#690000
b10111110000000000000 !
b10111110000000000000 %
b10111110000000000000 (
b11 "
b11 &
b10111110000000000000000 #
b10111110000000000000000 '
#700000
b111 $
b111 -
b100001101000010001011010111010001111001011100000110010100100000001100000010000001110100011001010111001101110100 .
b10111110000000000000 ,
b10111110000000000000 +
#790000
b1111111111111111111111111111111111111111111100111110000000000000 !
b1111111111111111111111111111111111111111111100111110000000000000 %
b1111111111111111111111111111111111111111111100111110000000000000 (
b100111110000000000000000 #
b100111110000000000000000 '
#800000
b1000 $
b1000 -
b100001101000010001011010111010001111001011100000110010100100000001100010010000001110100011001010111001101110100 .
b1111111111111111111111111111111111111111111100111110000000000000 ,
b1111111111111111111111111111111111111111111100111110000000000000 +
#890000
b1000 )
b1000 *
